// TODO: this file is ugly

@import "shared.scss";

$muted: #333;

$body-margin-w: 8px;
$app-padding-w: 18px;
$songcard-border-w: 18px;
$default-songcard-dimension: 180px;
$large-songcard-dimension: 300px;
$meta-color: rgb(130, 130, 130);

@mixin ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@function card-width($songcard-dim) {
  @return $songcard-dim + ($songcard-border-w * 2)
}

@function app-width($n-cards, $songcard-dim) {
  @return $n-cards * card-width($songcard-dim)
}

@function header-width($n-cards, $songcard-dim) {
  $cut: $songcard-border-w * $n-cards * 3; /* arbitrary */
  @return $n-cards * ($songcard-dim + ($songcard-border-w * 2)) - $cut;
}

@function breakpoint-width($n-cards, $songcard-dim) {
  @return app-width($n-cards, $songcard-dim) + (2 * $body-margin-w) + (2 * $app-padding-w)
}

body {
  font-family: -apple-system, BlinkMacSystemFont, proxima-nova, sans-serif;
  margin: $body-margin-w;
}

#app {
  max-width: app-width(1, $default-songcard-dimension);
  margin: 0 auto;
  padding: 0 $app-padding-w;
}

.header {
  max-width: header-width(1, $default-songcard-dimension);

  // Aligning elements center and right: https://stackoverflow.com/a/38948646
  display: grid;
  grid-template-columns: 1fr repeat(1, auto) 1fr;
  grid-column-gap: 5px;
  justify-items: center;

  font-size: 24px;
  color: $muted;
  margin: 30px auto 0;

  .username {
    max-width: 275px;
    @include ellipsis();
    display: block;
    grid-column-start: 2;
    .emph {
      font-weight: 600;
    }
  }

  .logout {
    display: none;
    margin-left: auto;
    font-size: 13px;
    font-weight: 500;
    position: relative;
    top: 6px;
    a {
      text-decoration: none;
      color: inherit;
    }
  }
}

.info {
  margin: 50px auto 0;
  text-align: center;
  font-size: 20px;
  color: $muted;
}

.songs {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 60px;
}

@mixin songCardProps($songcard-dim, $border-bottom, $adjust-font-size) {
  max-width: $songcard-dim;
  max-height: $songcard-dim;
  border-left: $songcard-border-w solid transparent;
  border-right: $songcard-border-w solid transparent;
  border-bottom: $border-bottom solid transparent;

  $transition-enter-duration: 250ms;
  $transition-exit-duration: 200ms;

  .scaleArea {
    &:hover {
      .pict {
        transform: scale(1.10);
        transition: $transition-enter-duration ease transform;
      }
      .title, .other {
        transform: scale(1.1) translateY($songcard-dim * .1 / 2);
        transition: $transition-enter-duration ease transform;
      }
      .date {
        transform: scale(1.1) translateY($songcard-dim * .1 / 2);
        transition: $transition-enter-duration ease transform, 500ms ease opacity;
      }
      .other {
        transform: scale(1.1) translateY($songcard-dim * .1 / 2 + 1px);
      }
      .date {
        transform: scale(1.1) translateY($songcard-dim * .1 / 2 + 2px);
        opacity: 1;
      }
    }
  }

  .pict {
    width: $songcard-dim;
    height: $songcard-dim;
    background-size: contain;
    border-radius: 4px;
    border: 1px solid #e5e5e5;
    transition: $transition-exit-duration ease transform;
  }

  .meta {
    padding-left: 2px;
    padding-right: 6px;
    cursor: default;
    color: $meta-color;

    .title {
      font-size: 13px + $adjust-font-size;
      margin-top: 8px;
      transition: $transition-exit-duration ease all;
      @include ellipsis();
    }

    .other {
      font-size: 12px + $adjust-font-size;
      transition: $transition-exit-duration ease all;
      line-height: 1.5;
      @include ellipsis();
    }

    .date {
      font-size: 11px + $adjust-font-size;
      line-height: 1.3;
      transition: $transition-exit-duration ease all;
      opacity: 0;
    }
  }
}

.SongCard {
  @include songCardProps($large-songcard-dimension, 105px, 2px);
}

@media screen and (min-width: 480px) {
  $cards: 2;
  #app {
    max-width: app-width($cards, $default-songcard-dimension)
  }
  .header {
    max-width: header-width($cards, $default-songcard-dimension)
  }
  .username {
    max-width: 380px;
  }

  .SongCard {
    @include songCardProps($default-songcard-dimension, 90px, 0);
  }
}

@media screen and (min-width: 700px) {
  $cards: 3;
  #app {
    max-width: app-width($cards, $default-songcard-dimension)
  }
  .header {
    max-width: header-width($cards, $default-songcard-dimension)
  }

  .songs {
    justify-content: flex-start;
  }
  .header {
    .username {
      max-width: 500px;
    }
    .logout {
      display: block;
    }
  }
}

@media screen and (min-width: 915px) {
  $cards: 4;
  #app {
    max-width: app-width($cards, $default-songcard-dimension)
  }
  .header {
    max-width: header-width($cards, $default-songcard-dimension)
  }
}

@media screen and (min-width: 1450px) {
  $cards: 5;
  #app {
    max-width: app-width($cards, $default-songcard-dimension)
  }
  .header {
    max-width: header-width($cards, $default-songcard-dimension)
  }
}
